version: '2.1'
services:

# originaly taken from MarcLamberti's Apache-Airflow hands on guide course docker-compose.yml

######################################################
# DATABASE SERVICE
######################################################
  mongo:
    build: './docker/mongo'
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./docker/mongo/data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=tia
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/

  postgres:
    build: './docker/postgres'
    restart: always
    container_name: postgres
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - "32769:5432"
    #volumes:
      #- ./docker/postgres:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
      #- PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "airflow_db", "-U", "airflow" ]
      timeout: 45s
      interval: 10s
      retries: 10

  adminer:
    image: wodby/adminer:4.8
    restart: always
    container_name: adminer
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - "32767:9000"
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=psql
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=airflow_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "adminer", "9000" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# AIRFLOW
######################################################

  airflow:
    build: ./docker/airflow
    restart: always
    container_name: airflow
    volumes:
      - ./docker/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./docker/airflow/dags:/opt/airflow/dags
      - ./docker/airflow/json:/opt/airflow/json
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# Streamlit
######################################################
  streamlit:
    build: ./docker/streamlit
    restart: always
    container_name: streamlit
    volumes:
      - ./docker/streamlit/dashboard.py:/app/dashboard.py
      - ./docker/streamlit/config.toml:/app/.streamlit/config.toml
    ports:
      - 8501:8501
    healthcheck:
      test: [ "CMD", "nc", "-z", "streamlit", "8501" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# NETWORK
######################################################

# because of the _ contained by default network
networks:
  default:
    name: airflow-network